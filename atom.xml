<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WaiBlog|码农的技术小窝</title>
  
  <subtitle>所有的努力都值得期许，每一份梦想都应该灌溉！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://waisunny.com/"/>
  <updated>2017-11-19T08:46:47.713Z</updated>
  <id>http://waisunny.com/</id>
  
  <author>
    <name>_learner</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>setuptools和pip安装教程</title>
    <link href="http://waisunny.com/2017/11/20/setuptools%E5%92%8Cpip%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://waisunny.com/2017/11/20/setuptools和pip安装教程/</id>
    <published>2017-11-19T16:03:08.000Z</published>
    <updated>2017-11-19T08:46:47.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装setuptools"><a href="#安装setuptools" class="headerlink" title="安装setuptools"></a>安装setuptools</h1><p>①下载setuptools源码<strong>setuptools-25.2.0.tar.gz</strong>，地址：<a href="https://pypi.python.org/pypi/setuptools" title="setuptools下载" target="_blank" rel="external">https://pypi.python.org/pypi/setuptools</a><br><img src="https://i.imgur.com/a29kEga.png" alt=""><br>②这是一个压缩文件，将其解压到桌面，并进入该文件夹；按住shift键后，在文件夹空白处点击鼠标右键，选择：在此处打开命令窗口，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>回车，看到如下图内容即表示安装成功：<br><img src="https://i.imgur.com/epT3f5n.png" alt=""></p><p>③安装完后在当前窗口中输入 <strong>easy_install</strong> 回车，进行检测，如果提示：<br><strong>error: No urls, filenames, or requirements specified (see –help</strong>) 说明安装成功，它在提示你命令后面需要跟参数。 如果提示： <strong>‘easy_install’</strong> 不是内部或外部命令，也不是可运行的程序或批处理文件。 请检查系统环境变量path是否配置了<strong>‘C:\Python27\Scripts’</strong></p><h1 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h1><h2 id="使用easy-install安装pip"><a href="#使用easy-install安装pip" class="headerlink" title="使用easy_install安装pip"></a>使用easy_install安装pip</h2><p>如果setuptools安装好后，可以直接用easy_install来安装pip，如下图：<br><img src="https://i.imgur.com/I0axT0o.png" alt=""></p><h2 id="手动安装pip"><a href="#手动安装pip" class="headerlink" title="手动安装pip"></a>手动安装pip</h2><p>如果还想手动安装的话，和安装setuptools步骤完全一样</p><p>①下载pip压缩包<strong>pip-9.0.1.tar.gz</strong>，地址：<a href="https://pypi.python.org/pypi/pip" title="pip下载" target="_blank" rel="external">https://pypi.python.org/pypi/pip</a>，如下图：<img src="https://i.imgur.com/gGKpfRK.png" alt=""></p><p>②这是一个压缩文件，将其解压到桌面，并进入该文件夹，按住shift键后，在文件夹空白处点击鼠标右键，选择：在此处打开命令窗口，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>回车，看到如下图内容即表示安装成功：<br><img src="https://i.imgur.com/vZev7uY.png" alt=""></p><p>③安装成功后输入 <strong>pip</strong> 回车，进行检测如果提示： <strong>Did not provide a command</strong> 说明安装成功，因为pip后面也需要跟参数；如果提示： <strong>‘pip’ </strong>不是内部或外部命令，也不是可运行的程序或批处理文件，请检查环境变量path是否配置了<strong>‘C:\Python27\Scripts’</strong></p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>卸载pip:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip uninstall pip setuptools</span><br></pre></td></tr></table></figure><p>升级pip:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装setuptools&quot;&gt;&lt;a href=&quot;#安装setuptools&quot; class=&quot;headerlink&quot; title=&quot;安装setuptools&quot;&gt;&lt;/a&gt;安装setuptools&lt;/h1&gt;&lt;p&gt;①下载setuptools源码&lt;strong&gt;setupto
      
    
    </summary>
    
    
      <category term="python环境部署" scheme="http://waisunny.com/tags/python%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>python中的变量存储机制</title>
    <link href="http://waisunny.com/2017/11/18/python%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/"/>
    <id>http://waisunny.com/2017/11/18/python中的变量存储机制/</id>
    <published>2017-11-17T17:06:42.000Z</published>
    <updated>2017-11-19T09:32:21.246Z</updated>
    
    <content type="html"><![CDATA[<p>定义变量的目的：简单来说，变量是为了存储程序运算过程中的一些中间结果，为了方便日后调用。</p><h1 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h1><ol><li>要具有描述性</li><li>变量名只能_,数字，字母组成，不可以是空格或特殊字符(#?&lt;.，￥$*!~)</li><li>不能以中文为变量名</li><li>不能以数字开头</li><li>保留字符是不能被使用</li></ol><h1 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h1><ol><li><p>定义一个整数变量:</p><p> a = 1</p></li><li><p>定义一个字符串变量:</p><p> t_007 = ‘T007’</p></li><li><p>定义一个布尔值：</p><p> Answer = True</p></li></ol><p>在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，例如：</p><pre><code>a = 123 # a是整数print(a)a = &apos;ABC&apos; # a变为字符串print(a)</code></pre><p>这种变量本身类型不固定的语言称之为<strong>动态语言</strong>，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下：</p><pre><code>int a = 123; //a是整数类型变量a = &quot;ABC&quot;; //错误：不能把字符串赋给整型变量</code></pre><p>和静态语言相比，动态语言更灵活。请不要把赋值语句的等号等同于数学的等号。比如下面的代码：</p><pre><code>x = 10x = x + 2</code></pre><p>如果从数学上理解x = x + 2那无论如何是不成立的，在程序中，赋值语句先计算右侧的表达式x + 2，得到结果12，再赋给变量x。由于x之前的值是10，重新赋值后，x的值变成12。</p><h1 id="存储机制"><a href="#存储机制" class="headerlink" title="存储机制"></a>存储机制</h1><p>声明：<strong>a = ‘ABC’</strong>时，Python解释器干了两件事情：</p><ol><li>在内存中创建了一个’ABC’的字符串；</li><li>在内存中创建了一个名为a的变量，并把它指向’ABC’。</li></ol><p>也可以把一个变量a赋值给另一个变量b，这个操作实际上<strong>是把变量b指向变量a所指向的数据</strong>，例如下面的代码：</p><pre><code>a = &apos;ABC&apos;b = aa = &apos;XYZ&apos;print(b)</code></pre><p>最后一行打印出变量b的内容到底是’ABC’呢还是’XYZ’？如果从数学意义上理解，就会错误地得出b和a相同，也应该是’XYZ’，但实际上b的值是’ABC’，让我们一行一行地执行代码，就可以看到到底发生了什么事：</p><ol><li><p>执行a = ‘ABC’，解释器创建了字符串’ABC’和变量a，并把a指向’ABC’：<br><img src="https://i.imgur.com/ldl7FxP.png" alt=""></p></li><li><p>执行b = a，解释器创建了变量b，并把b指向a指向的字符串’ABC’：<br><img src="https://i.imgur.com/JZ6sixs.png" alt=""></p></li><li><p>执行a = ‘XYZ’，解释器创建了字符串’XYZ’，并把a的指向改为’XYZ’，但b并没有更改：<br><img src="https://i.imgur.com/VEUY64z.png" alt=""></p></li></ol><p>所以，最后打印变量b的结果自然是’ABC’了。</p><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，通常用<strong>全部大写的变量名表示常量</strong>：</p><pre><code>PI = 3.14159265359</code></pre><p>但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。</p><h1 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h1><p>最后解释一下整数的除法为什么也是精确的。在Python中，有两种除法，一种除法是/：</p><pre><code>&gt;&gt;&gt; 10 / 33.3333333333333335 #这是python3中的结果python2中值为3</code></pre><p><strong>/</strong> python3中除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数：</p><pre><code>&gt;&gt;&gt; 9 / 33.0</code></pre><p>还有一种除法是 <strong>//</strong> ，称为地板除，两个整数的除法仍然是整数：</p><pre><code>&gt;&gt;&gt; 10 // 33</code></pre><p>你没有看错，整数的地板除 <strong>//</strong> 永远是整数，即使除不尽。要做精确的除法，使用 <strong>/</strong> 就可以。</p><p>因为 <strong>//</strong> 除法只取结果的整数部分，所以Python还提供一个余数运算，可以得到两个整数相除的余数：</p><pre><code>&gt;&gt;&gt; 10 % 31</code></pre><p>无论整数做 <strong>//</strong> 除法还是取余数 <strong>%</strong> ，结果永远是整数，所以，整数运算结果永远是精确的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;定义变量的目的：简单来说，变量是为了存储程序运算过程中的一些中间结果，为了方便日后调用。&lt;/p&gt;
&lt;h1 id=&quot;变量命名规则&quot;&gt;&lt;a href=&quot;#变量命名规则&quot; class=&quot;headerlink&quot; title=&quot;变量命名规则&quot;&gt;&lt;/a&gt;变量命名规则&lt;/h1&gt;&lt;ol&gt;

      
    
    </summary>
    
    
      <category term="python基础" scheme="http://waisunny.com/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>python 环境部署-Windows</title>
    <link href="http://waisunny.com/2017/11/16/python-%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2-Windows/"/>
    <id>http://waisunny.com/2017/11/16/python-环境部署-Windows/</id>
    <published>2017-11-15T16:53:48.000Z</published>
    <updated>2017-11-19T09:33:03.970Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><p>①下载python解释器：    </p><p>进入python官网：<a href="http://www.python.org" target="_blank" rel="external">http://www.python.org</a> 点击Downlods，选择Windows，然后看到如下界面：<img src="https://i.imgur.com/L62Jf03.jpg" alt=""></p><p>圈出来的一个是python3版本一个是python2版本，建议都安装，日后可根据需求使用，<strong>建议使用python3</strong>，虽然说现在市场上大部分是使用python2,但是python2最终会被python3替换掉，一些新项目都是使用python3开发的。另外没必要过于纠结两个版本，他们在一些语法上使用是有些许不同，但整体相似。详情参考:<a href="https://www.zhihu.com/question/19698598" title="python2和python3的区别" target="_blank" rel="external">https://www.zhihu.com/question/19698598</a></p><p>下载好后直接安装即可，<strong>记录住安装目录</strong>。    </p><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><p>②配置环境变量：    </p><p>步骤(Win10)：右键单击电脑属性—&gt;高级系统设置—&gt;环境变量—&gt;编辑系统变量Path—&gt;将刚才的安装路径添加进去，如下图：<img src="https://i.imgur.com/Akxo4lX.jpg" alt=""><br>我配置了python3和python2的环境变量，并把python3的放在了第一位，系统会采用环境变量靠前的python版本；环境变量设置的路径就是你python的安装路径，以python2为例，如下图：<img src="https://i.imgur.com/9DFsk0G.jpg" alt=""></p><h1 id="检验是否安装成功"><a href="#检验是否安装成功" class="headerlink" title="检验是否安装成功"></a>检验是否安装成功</h1><p>打开cmd命令框，快捷键是windows+r ,输入cmd–&gt;回车—&gt;在弹出的命令框中输入 <strong>python</strong>,看到如下图内容即表示配置成功：<img src="https://i.imgur.com/jbijBPp.jpg" alt=""></p><h1 id="完善"><a href="#完善" class="headerlink" title="完善"></a>完善</h1><p>为了方便后续的python版本切换，建议将python安装路径下的python.exe程序重命名为对应版本的名称，即python2.7版本的命名为：python2.exe，python3.6版本的命名为python3.exe；这样我们就可以在命令框中直接输入对应的名称就可以使用各版本的python，不用切换环境变量的先后顺序了。如下图：<img src="https://i.imgur.com/Jvns0hw.jpg" alt=""></p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>这是最基本的python环境部署，后续在实际开发过程中我们还要安装很多类库、插件等；推荐安装pip,使用pip安装类库等十分方便。如何安装pip,详见：<a href="http://waisunny.com/2017/11/20/setuptools%E5%92%8Cpip%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/" title="setuptools和pip安装教程">http://waisunny.com/2017/11/20/setuptools%E5%92%8Cpip%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h1&gt;&lt;p&gt;①下载python解释器：    &lt;/p&gt;
&lt;p&gt;进入python官网：&lt;a href=&quot;http://www.python.org
      
    
    </summary>
    
    
      <category term="python环境部署" scheme="http://waisunny.com/tags/python%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
</feed>
